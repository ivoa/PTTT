# OpenAPI generated FastAPI server

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: {{appVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Generator version: {{generatorVersion}}
- Build package: {{generatorClass}}

## Requirements.

Python >= {{{generatorLanguageVersion}}}

## Installation & Usage

To run the server, please execute the following from the root directory:

```bash
pip3 install -r requirements.txt
PYTHONPATH=src uvicorn openapi_server.main:app --host 0.0.0.0 --port {{serverPort}}
```

and open your browser at `http://localhost:{{serverPort}}/docs/` to see the docs.

## Running with Docker

To run the server on a Docker container, please execute the following from the root directory:

```bash
docker-compose up --build
```

## Tests

To run the tests:

```bash
pip3 install pytest
PYTHONPATH=src pytest tests
```

## Implementing your service logic

The FastAPI application generated by this project is intended to be a starting point for your service logic.
You can either implement your service logic by:

1. Directly modifying the generated API file in {{sourceFolder}}/{{packageName}}/{{apiPackage}}/{{apiInfo.apis.0.classVarName}}.py
2. Creating a subclass of the base API Base{{apiInfo.apis.0.classname}} class in {{apiInfo.apis.0.classVarName}}_{{baseSuffix}}.py and overriding the methods you want to change.

Option 2 is the recommended approach, as it allows you to upgrade the generated code without overwriting your implmentation logic.
For your convenience, an example implementation of the base class is provided in {{apiInfo.apis.0.classVarName}}_{{fastapiImplementationPackage}}.py These implementations only provide basic example logic for the service and should be replaced with your own.

