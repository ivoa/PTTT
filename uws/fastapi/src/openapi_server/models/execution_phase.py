# coding: utf-8

"""
    Universal Worker Service (UWS)

    The Universal Worker Service (UWS) pattern defines how to manage asynchronous execution of jobs on a service.

    The version of the OpenAPI document: 1.2
    Contact: grid@ivoa.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
import re  # noqa: F401
from enum import Enum


class ExecutionPhase(str, Enum):
    """
    Enumeration of possible phases of job execution  PENDING: The first phase a job is entered into - this is where       a job is being set up but no request to run has       occurred.  QUEUED: A job has been accepted for execution but is waiting       in a queue  EXECUTING: A job is running  COMPLETED: A job has completed successfully  ERROR: Some form of error has occurred  UNKNOWN: The job is in an unknown state.  HELD: The job is HELD pending execution and will not       automatically be executed - can occur after a       PHASE=RUN request has been made (cf PENDING).  SUSPENDED: The job has been suspended by the system during       execution  ABORTED: The job has been aborted, either by user request or by       the server because of lack or overuse of resources.  ARCHIVED: The job has been archived by the server at destruction time. An archived job       may have deleted the results to reclaim resources, but must have job metadata preserved.       This is an alternative that the server may choose in contrast to completely destroying all record of the job.
    """

    PENDING = "PENDING"
    QUEUED = "QUEUED"
    EXECUTING = "EXECUTING"
    COMPLETED = "COMPLETED"
    ERROR = "ERROR"
    UNKNOWN = "UNKNOWN"
    HELD = "HELD"
    SUSPENDED = "SUSPENDED"
    ABORTED = "ABORTED"
    ARCHIVED = "ARCHIVED"

    @classmethod
    def from_json(cls, json_str: str) -> ExecutionPhase:
        """Create an instance of ExecutionPhase from a JSON string"""
        return cls(json.loads(json_str))
